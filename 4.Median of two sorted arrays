Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.


solution:

class Solution {

public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
       
        vector<int> nums3;
        for(auto num:nums1)
        nums3.push_back(num);

        for(auto num:nums2)
            nums3.push_back(num);

            sort(nums3.begin(),nums3.end());

            int n=nums3.size();

            return n%2?nums3[n/2]:(nums3[n/2-1]+nums3[n/2])/2.0;
    }
};
